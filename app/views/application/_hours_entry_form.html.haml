= simple_form_for @hours_entry do |f|
  = f.error_notification
  #entry_type_buttons.btn-group
    = f.input :entry_type_option, as: :hidden, input_html: {value: @hours_entry.entry_type_option || "manual"}
    %span Manual
    %span.switch
      %span.slider.round{"data-value" => "manual"}
    %span Timer
  = f.association :project, required: true, collection: Project.unarchived.by_name, label: false, placeholder: t("entries.index.project")
  = f.association :category, required: true, collection: Category.by_name, label: false, placeholder: t("entries.index.category")
  = f.input :value, required: true, label: false, placeholder: t("entries.index.hours")
  = f.input :date, required: true, as: :string, input_html: { value: (@hours_entry.date || DateTime.current).strftime("%d/%m/%Y"), class: "datepicker"}, label: false
  .taggable
    = f.input :description, input_html: { data: { data: Tag.list }, autocomplete: :off }, label: false, autocomplete: "off", placeholder: t("entries.index.description")
    %span.background-highlighter
  %div.hour_timer_value_div
    %span.hours 00
    %span :
    %span.minutes 00
    %span :
    %span.seconds 00
  = f.input :timer_value, required: true, label: false, as: :hidden, placeholder: t("entries.index.hours")
  = f.button :submit, data: { disable_with: t("loader.saving") }
  %div.timer-btn
    %button.start-timer Start Timer
    = f.button :submit, "Stop Timer", data: { disable_with: t("loader.saving") }, class: "stop-timer"
